document.getElementById('projectForm').addEventListener('submit', async (e) => {
  e.preventDefault();

  const form = e.target;
  const formData = new FormData(form);

  const token = localStorage.getItem('token');
  if (!token) {
    alert('–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞. –ó–∞–ª–æ–≥–∏–Ω—å—Ç–µ—Å—å —Å–Ω–∞—á–∞–ª–∞.');
    return;
  }

  try {
    const response = await fetch('/api/projects', {
      method: 'POST',
      body: formData,
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    const data = await response.json();

    if (response.ok) {
      alert('–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!');
      form.reset();
      loadProjects();
    } else {
      alert('–û—à–∏–±–∫–∞: ' + data.error);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
    alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞');
  }
});

async function loadProjects() {
  try {
    const res = await fetch('/api/projects');
    const projects = await res.json();
    const list = document.getElementById('projectsList');
    list.innerHTML = '';

    projects.forEach(project => {
      const div = document.createElement('div');
      div.className = 'admin-project';

      div.innerHTML = `
        <div class="left_part">
        <img src="${project.coverImage}" alt="${project.title}" />
        <div class="text_project">
          <strong>${project.title}</strong><br>
          <small>${project.year || ''} ‚Äî ${project.category || ''}</small>
        </div>
        </div>
        <div class="right_part">
          <a href="edit-project.html?id=${project._id}">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</a>
          <button data-id="${project._id}" class="delete-btn">üóë –£–¥–∞–ª–∏—Ç—å</button>
        </div>
      `;
      list.appendChild(div);
    });

    document.querySelectorAll('.delete-btn').forEach(btn => {
      btn.addEventListener('click', async () => {
        const id = btn.dataset.id;
        if (confirm('–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç?')) {
          await fetch(`/api/projects/${id}`, {
            method: 'DELETE',
            credentials: 'include',
          });
          loadProjects();
        }
      });
    });
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤:', err);
  }
}

async function checkSession() {
  const res = await fetch('/api/checkSession', { credentials: 'include' });
  const data = await res.json();

  const loginForm = document.getElementById('loginForm');
  const projectForm = document.getElementById('projectForm');
  const userInfo = document.getElementById('userInfo');
  const projectsTitle = document.getElementById('projectsTitle');

  if (data.sessionExists) {
    loginForm.style.display = 'none';
    projectForm.style.display = 'block';
    userInfo.style.display = 'block';
    projectsTitle.style.display = 'block'; // –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫
    document.getElementById('welcome').textContent = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${data.username || '–û–ª—å–≥–∞'}`;
    loadProjects();
  } else {
    loginForm.style.display = 'block';
    projectForm.style.display = 'none';
    userInfo.style.display = 'none';
    projectsTitle.style.display = 'none'; // —Å–∫—Ä—ã—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫
    document.getElementById('projectsList').innerHTML = '';
  }
}


document.getElementById('loginForm').addEventListener('submit', async e => {
  e.preventDefault();
  const username = document.getElementById('username').value;
  const password = document.getElementById('password').value;

  const res = await fetch('/api/auth/login', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    credentials: 'include',
    body: JSON.stringify({ username, password })
  });

  const data = await res.json();

  if (res.ok && data.ok) {
    await checkSession(); // ‚úÖ —Å—Ä–∞–∑—É –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞
  } else {
    alert('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞');
  }
});

document.getElementById('logoutBtn').addEventListener('click', async () => {
  await fetch('/api/auth/logout', {
    method: 'POST',
    credentials: 'include'
  });
  await checkSession();
});

// üî• –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('DOMContentLoaded', checkSession);
